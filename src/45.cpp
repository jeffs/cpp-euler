/** @file 45.cpp Problem 45: Triangular, pentagonal, and hexagonal
 *
 * Triangle, pentagonal, and hexagonal numbers are generated by the following
 * formulae:
 *
 *      Triangle                Tn=n(n+1)/2             1, 3, 6, 10, 15, ...
 *      Pentagonal              Pn=n(3n-1)/2            1, 5, 12, 22, 35, ...
 *      Hexagonal               Hn=n(2n-1)              1, 6, 15, 28, 45, ...
 *
 * It can be verified that T285 = P165 = H143 = 40755.
 *
 * Find the next triangle number that is also pentagonal and hexagonal.
 */

#include "monotonic.hpp"    // triangular/pentagonal/hexagonal_seq/src/set

/// @cond
#include <cassert>          // assert
#include <cstdint>          // uint64_t
#include <iostream>         // cout
/// @endcond

using std::uint64_t;

int main()
{
    {
        monotonic::triangular_seq t;
        monotonic::pentagonal_seq p;
        monotonic::hexagonal_seq  h;

        assert(t[285] == 40755);
        assert(p[165] == 40755);
        assert(h[143] == 40755);
    }

    monotonic::triangular_src<uint64_t> t;
    monotonic::pentagonal_set<uint64_t> p;
    monotonic::hexagonal_set<uint64_t>  h;

    auto i = t.next();
    while (i != 40755)
        i = t.next();
    i = t.next();
    while (!p[i] || !h[i])
        i = t.next();
    std::cout << i << std::endl;
}
