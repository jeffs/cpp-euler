/** @file 2.cpp Problem 2: Even Fibonacci numbers
 *
 * Each new term in the Fibonacci sequence is generated by adding the previous
 * two terms. By starting with 1 and 2, the first 10 terms will be:
 *
 *  1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 *
 * By considering the terms in the Fibonacci sequence whose values do not
 * exceed four million, find the sum of the even-valued terms.
 */

/// @cond
#include <cstdint>  // uint64_t
#include <iostream> // cout
#include <utility>  // swap
/// @endcond

using std::uint64_t;

uint64_t sum(uint64_t n)
{
    uint64_t r = 0;
    for (uint64_t a = 0, b = 1; a < n; a += b, std::swap(a, b)) {
        if (a % 2 == 0)
            r += a;
    }
    return r;
}

int main()
{
    std::cout << sum(4'000'000) << '\n';
}
